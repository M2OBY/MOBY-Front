import { Component, VNode } from 'preact';
import { NumberTuple, Margin } from '../types';
interface BrushProps {
    height: number;
    width: number;
    margin: Margin;
    handleSize?: number;
    onBrushEnd?: (extent: NumberTuple | null) => void;
    onBrushStart?: (extent: NumberTuple) => void;
    onBrush?: (extent: NumberTuple) => void;
}
interface BrushState {
    extent: NumberTuple | null;
    relExtent: NumberTuple | null;
    mouseDown: boolean;
    mouseDownTime?: number;
    brushExtentIndex: 0 | 1 | 'init' | 'move';
}
export declare class BrushX extends Component<BrushProps, BrushState> {
    static defaultProps: {
        onBrush: () => void;
        onBrushStart: () => void;
        onBrushEnd: () => void;
        handleSize: number;
    };
    constructor(props: BrushProps);
    render({ height, width, handleSize }: BrushProps, { extent }: BrushState): VNode;
    componentWillReceiveProps(newProps: BrushProps): void;
    private handleMouseDown;
    private handleMouseMove;
    private handleMouseUp;
}
export {};
